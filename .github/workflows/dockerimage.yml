name: Docker Image CI

on:
  push:
    # Publish `v1.2.3` tags as releases.
    tags:
      - v*

  # Run tests for any PRs.
  pull_request:

env:
  IMAGE_NAME: node-minimal
  NODE_VERSION: "12.19.0"
  MAJOR_VERSION: 12

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Install ccache
        run: |
          sudo apt-get -qq update
          sudo apt-get -qq install ccache
          sudo /usr/sbin/update-ccache-symlinks

      - name: Restore Cache
        uses: actions/cache@v2
        with:
          path: ~/.ccache
          key: ${{ runner.os }}-node-${{ env.MAJOR_VERSION }}-ccache

      - name: Build Node
        run: |
          export PATH="/usr/lib/ccache:$PATH"
          which gcc
          ./build.sh -n $NODE_VERSION
          ccache -s
          cp node-v$NODE_VERSION/out/Release/node node

      - name: Build Image
        run: docker build . --file Dockerfile --tag $IMAGE_NAME

      - name: Test Image
        run: docker run --rm $IMAGE_NAME -e "console.log('Hello from Node.js ' + process.version)"

      - name: Export Image
        run: docker save $IMAGE_NAME > $IMAGE_NAME.tar

      - name: Upload Image
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.IMAGE_NAME }}-${{ env.NODE_VERSION }}
          path: ${{ env.IMAGE_NAME }}.tar
          retention-days: 7

  # Push image to GitHub Container Registry.
  push:
    # Ensure test job passes before pushing image.
    needs: build

    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - name: Download Image
        uses: actions/download-artifact@v2
        with:
          name: ${{ env.IMAGE_NAME }}-${{ env.NODE_VERSION }}

      - name: Import Image
        run: docker load < $IMAGE_NAME.tar

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CR_PAT }}

      - name: Push Image
        run: |
          IMAGE_ID=ghcr.io/$GITHUB_ACTOR/$IMAGE_NAME

          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION

          docker tag $IMAGE_NAME $IMAGE_ID:$MAJOR_VERSION
          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION

          docker push $IMAGE_ID:$MAJOR_VERSION
          docker push $IMAGE_ID:$VERSION
